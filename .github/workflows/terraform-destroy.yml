name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      confirm:
        description: 'Type "destroy" to confirm'
        required: true
        type: string

permissions:
  contents: read

env:
  TF_LOG: INFO

jobs:
  terraform:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.confirm == 'destroy' }}
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Create terraform.tfvars file from secrets
    - name: Create terraform.tfvars
      run: |
        cat > terraform.tfvars << EOF
        aws_region        = "${{ secrets.AWS_REGION }}"
        vpc_id            = "${{ secrets.VPC_ID }}"
        project_name      = "hrgoat-${{ github.event.inputs.environment }}"
        ec2_ami_id        = "${{ secrets.EC2_AMI_ID }}"
        ec2_instance_type = "${{ secrets.EC2_INSTANCE_TYPE }}"
        key_name          = "${{ secrets.KEY_NAME }}"
        db_instance_class = "${{ secrets.DB_INSTANCE_CLASS }}"
        db_username       = "${{ secrets.DB_USERNAME }}"
        db_password       = "${{ secrets.DB_PASSWORD }}"
        EOF

    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Destroy the infrastructure
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      
    # Output confirmation
    - name: Output Confirmation
      run: |
        echo "Infrastructure for environment ${{ github.event.inputs.environment }} has been destroyed." >> $GITHUB_STEP_SUMMARY 